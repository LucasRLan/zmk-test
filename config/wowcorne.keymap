/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define WIN 0
#define MAC 1
#define NAV 2
#define SYM 3
#define FN 4
#define CFG 5
#define MSE 6

//universial keycodes

#define L_SYM &mo SYM
#define L_FN  &mo FN
#define L_CFG &mo CFG
#define L_NAV &mo NAV
#define L_MSE &mo MSE
#define TAB_C &kp LC(TAB)
#define LT_SPACE &lt MSE SPACE

// winos keycodes

#define WHF &hm LCTRL F
#define WHD &hm LALT D
#define WHJ &hm RCTRL J
#define WHK &hm RALT K
#define LANGW &mt RSHFT RALT
#define ESCW &mt LGUI ESC

// macos keycodes

#define MHF &hm LGUI F
#define MHD &hm LALT D
#define MHJ &hm RGUI J
#define MHK &hm RALT K
#define OBS &hm LA(LSFT) A
#define OBS_C &hm LC(LA(LSFT)) A
#define LANGM &mt RALT LC(SPACE)
#define ESCM &mt LCTRL ESC

&mt { tapping-term-ms = <125>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };

        tabesctap: tabesctap {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESCTAP";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <170>;
        };

        spacelayer: spacelayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        shiftmonum: shiftmonum {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMONUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&tabesctap  &kp Q  &kp W  &kp E         &kp R                &kp T          &kp Y  &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F                &kp G          &kp H  &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V                &kp B          &kp N  &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_WIN  &spacelayer 3 SPACE  &lt 1 SPACE    &mo 2  &lt 3 SPACE  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&mt LEFT_CONTROL F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6         &trans     &kp UNDER      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&mt LSHFT F7         &kp F8           &kp F9  &kp F10   &kp F11     &kp F12        &trans     &kp PIPE       &kp PIPE      &kp PIPE              &kp BACKSLASH          &kp ESCAPE
                                              &trans    &trans      &trans         &mo 5      &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                   &kp NUMBER_6   &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&kp LCTRL    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR            &kp PERCENT              &kp MINUS      &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&shiftmonum  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH  &kp UNDER  &kp PLUS   &kp SLASH         &kp BACKSLASH      &kp TILDE
                                         &trans        &trans                &mo 5                    &trans         &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &kp N6  &kp N7    &kp N8         &kp N9     &kp N0     &kp DEL
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp SPACE  &trans       &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans    &trans  &trans     &trans       &trans  &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
                             &trans  &kp SPACE  &kp SPACE    &trans  &mo 3     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp CLCK      &bt BT_PRV    &bt BT_NXT    &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define WIN 0
#define MAC 1
#define NAV 2
#define SYM 3
#define FN 4
#define CFG 5
#define MSE 6

//universial keycodes

#define L_SYM &mo SYM
#define L_FN  &mo FN
#define L_CFG &mo CFG
#define L_NAV &mo NAV
#define L_MSE &mo MSE
#define TAB_C &kp LC(TAB)
#define LT_SPACE &lt MSE SPACE

// winos keycodes

#define WHF &hm LCTRL F
#define WHD &hm LALT D
#define WHJ &hm RCTRL J
#define WHK &hm RALT K
#define LANGW &mt RSHFT RALT
#define ESCW &mt LGUI ESC

// macos keycodes

#define MHF &hm LGUI F
#define MHD &hm LALT D
#define MHJ &hm RGUI J
#define MHK &hm RALT K
#define OBS &hm LA(LSFT) A
#define OBS_C &hm LC(LA(LSFT)) A
#define LANGM &mt RALT LC(SPACE)
#define ESCM &mt LCTRL ESC

&mt { tapping-term-ms = <125>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };

        tabesctap: tabesctap {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESCTAP";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <170>;
        };

        spacelayer: spacelayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        shiftmonum: shiftmonum {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMONUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&tabesctap  &kp Q  &kp W  &kp E         &kp R                &kp T          &kp Y  &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F                &kp G          &kp H  &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V                &kp B          &kp N  &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_WIN  &spacelayer 3 SPACE  &lt 1 SPACE    &mo 2  &lt 3 SPACE  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&mt LEFT_CONTROL F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6         &trans     &kp UNDER      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&mt LSHFT F7         &kp F8           &kp F9  &kp F10   &kp F11     &kp F12        &trans     &kp PIPE       &kp PIPE      &kp PIPE              &kp BACKSLASH          &kp ESCAPE
                                              &trans    &trans      &trans         &mo 5      &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                   &kp NUMBER_6   &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&kp LCTRL    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR            &kp PERCENT              &kp MINUS      &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&shiftmonum  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH  &kp UNDER  &kp PLUS   &kp SLASH         &kp BACKSLASH      &kp TILDE
                                         &trans        &trans                &mo 5                    &trans         &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &kp N6  &kp N7    &kp N8         &kp N9     &kp N0     &kp DEL
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp SPACE  &trans       &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans    &trans  &trans     &trans       &trans  &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
                             &trans  &kp SPACE  &kp SPACE    &trans  &mo 3     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp CLCK      &bt BT_PRV    &bt BT_NXT    &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define WIN 0
#define MAC 1
#define NAV 2
#define SYM 3
#define FN 4
#define CFG 5
#define MSE 6

//universial keycodes

#define L_SYM &mo SYM
#define L_FN  &mo FN
#define L_CFG &mo CFG
#define L_NAV &mo NAV
#define L_MSE &mo MSE
#define TAB_C &kp LC(TAB)
#define LT_SPACE &lt MSE SPACE

// winos keycodes

#define WHF &hm LCTRL F
#define WHD &hm LALT D
#define WHJ &hm RCTRL J
#define WHK &hm RALT K
#define LANGW &mt RSHFT RALT
#define ESCW &mt LGUI ESC

// macos keycodes

#define MHF &hm LGUI F
#define MHD &hm LALT D
#define MHJ &hm RGUI J
#define MHK &hm RALT K
#define OBS &hm LA(LSFT) A
#define OBS_C &hm LC(LA(LSFT)) A
#define LANGM &mt RALT LC(SPACE)
#define ESCM &mt LCTRL ESC

&mt { tapping-term-ms = <125>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };

        tabesctap: tabesctap {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESCTAP";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <170>;
        };

        spacelayer: spacelayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        shiftmonum: shiftmonum {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMONUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&tabesctap  &kp Q  &kp W  &kp E         &kp R                &kp T          &kp Y  &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F                &kp G          &kp H  &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V                &kp B          &kp N  &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_WIN  &spacelayer 3 SPACE  &lt 1 SPACE    &mo 2  &lt 3 SPACE  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&mt LEFT_CONTROL F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6         &trans     &kp UNDER      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&mt LSHFT F7         &kp F8           &kp F9  &kp F10   &kp F11     &kp F12        &trans     &kp PIPE       &kp PIPE      &kp PIPE              &kp BACKSLASH          &kp ESCAPE
                                              &trans    &trans      &trans         &mo 5      &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                   &kp NUMBER_6   &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&kp LCTRL    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR            &kp PERCENT              &kp MINUS      &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&shiftmonum  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH  &kp UNDER  &kp PLUS   &kp SLASH         &kp BACKSLASH      &kp TILDE
                                         &trans        &trans                &mo 5                    &trans         &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &kp N6  &kp N7    &kp N8         &kp N9     &kp N0     &kp DEL
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp SPACE  &trans       &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans    &trans  &trans     &trans       &trans  &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
                             &trans  &kp SPACE  &kp SPACE    &trans  &mo 3     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp CLCK      &bt BT_PRV    &bt BT_NXT    &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define WIN 0
#define MAC 1
#define NAV 2
#define SYM 3
#define FN 4
#define CFG 5
#define MSE 6

//universial keycodes

#define L_SYM &mo SYM
#define L_FN  &mo FN
#define L_CFG &mo CFG
#define L_NAV &mo NAV
#define L_MSE &mo MSE
#define TAB_C &kp LC(TAB)
#define LT_SPACE &lt MSE SPACE

// winos keycodes

#define WHF &hm LCTRL F
#define WHD &hm LALT D
#define WHJ &hm RCTRL J
#define WHK &hm RALT K
#define LANGW &mt RSHFT RALT
#define ESCW &mt LGUI ESC

// macos keycodes

#define MHF &hm LGUI F
#define MHD &hm LALT D
#define MHJ &hm RGUI J
#define MHK &hm RALT K
#define OBS &hm LA(LSFT) A
#define OBS_C &hm LC(LA(LSFT)) A
#define LANGM &mt RALT LC(SPACE)
#define ESCM &mt LCTRL ESC

&mt { tapping-term-ms = <125>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };

        tabesctap: tabesctap {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESCTAP";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <170>;
        };

        spacelayer: spacelayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        shiftmonum: shiftmonum {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMONUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&tabesctap  &kp Q  &kp W  &kp E         &kp R                &kp T          &kp Y  &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F                &kp G          &kp H  &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V                &kp B          &kp N  &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_WIN  &spacelayer 3 SPACE  &lt 1 SPACE    &mo 2  &lt 3 SPACE  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&mt LEFT_CONTROL F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6         &trans     &kp UNDER      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&mt LSHFT F7         &kp F8           &kp F9  &kp F10   &kp F11     &kp F12        &trans     &kp PIPE       &kp PIPE      &kp PIPE              &kp BACKSLASH          &kp ESCAPE
                                              &trans    &trans      &trans         &mo 5      &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                   &kp NUMBER_6   &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&kp LCTRL    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR            &kp PERCENT              &kp MINUS      &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&shiftmonum  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH  &kp UNDER  &kp PLUS   &kp SLASH         &kp BACKSLASH      &kp TILDE
                                         &trans        &trans                &mo 5                    &trans         &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &kp N6  &kp N7    &kp N8         &kp N9     &kp N0     &kp DEL
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp SPACE  &trans       &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans    &trans  &trans     &trans       &trans  &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
                             &trans  &kp SPACE  &kp SPACE    &trans  &mo 3     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp CLCK      &bt BT_PRV    &bt BT_NXT    &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define WIN 0
#define MAC 1
#define NAV 2
#define SYM 3
#define FN 4
#define CFG 5
#define MSE 6

//universial keycodes

#define L_SYM &mo SYM
#define L_FN  &mo FN
#define L_CFG &mo CFG
#define L_NAV &mo NAV
#define L_MSE &mo MSE
#define TAB_C &kp LC(TAB)
#define LT_SPACE &lt MSE SPACE

// winos keycodes

#define WHF &hm LCTRL F
#define WHD &hm LALT D
#define WHJ &hm RCTRL J
#define WHK &hm RALT K
#define LANGW &mt RSHFT RALT
#define ESCW &mt LGUI ESC

// macos keycodes

#define MHF &hm LGUI F
#define MHD &hm LALT D
#define MHJ &hm RGUI J
#define MHK &hm RALT K
#define OBS &hm LA(LSFT) A
#define OBS_C &hm LC(LA(LSFT)) A
#define LANGM &mt RALT LC(SPACE)
#define ESCM &mt LCTRL ESC

&mt { tapping-term-ms = <125>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };

        tabesctap: tabesctap {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESCTAP";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <170>;
        };

        spacelayer: spacelayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        shiftmonum: shiftmonum {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMONUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&tabesctap  &kp Q  &kp W  &kp E         &kp R                &kp T          &kp Y  &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F                &kp G          &kp H  &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V                &kp B          &kp N  &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_WIN  &spacelayer 3 SPACE  &lt 1 SPACE    &mo 2  &lt 3 SPACE  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&mt LEFT_CONTROL F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6         &trans     &kp UNDER      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&mt LSHFT F7         &kp F8           &kp F9  &kp F10   &kp F11     &kp F12        &trans     &kp PIPE       &kp PIPE      &kp PIPE              &kp BACKSLASH          &kp ESCAPE
                                              &trans    &trans      &trans         &mo 5      &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                   &kp NUMBER_6   &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&kp LCTRL    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR            &kp PERCENT              &kp MINUS      &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&shiftmonum  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH  &kp UNDER  &kp PLUS   &kp SLASH         &kp BACKSLASH      &kp TILDE
                                         &trans        &trans                &mo 5                    &trans         &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &kp N6  &kp N7    &kp N8         &kp N9     &kp N0     &kp DEL
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp SPACE  &trans       &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans    &trans  &trans     &trans       &trans  &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
                             &trans  &kp SPACE  &kp SPACE    &trans  &mo 3     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp CLCK      &bt BT_PRV    &bt BT_NXT    &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define WIN 0
#define MAC 1
#define NAV 2
#define SYM 3
#define FN 4
#define CFG 5
#define MSE 6

//universial keycodes

#define L_SYM &mo SYM
#define L_FN  &mo FN
#define L_CFG &mo CFG
#define L_NAV &mo NAV
#define L_MSE &mo MSE
#define TAB_C &kp LC(TAB)
#define LT_SPACE &lt MSE SPACE

// winos keycodes

#define WHF &hm LCTRL F
#define WHD &hm LALT D
#define WHJ &hm RCTRL J
#define WHK &hm RALT K
#define LANGW &mt RSHFT RALT
#define ESCW &mt LGUI ESC

// macos keycodes

#define MHF &hm LGUI F
#define MHD &hm LALT D
#define MHJ &hm RGUI J
#define MHK &hm RALT K
#define OBS &hm LA(LSFT) A
#define OBS_C &hm LC(LA(LSFT)) A
#define LANGM &mt RALT LC(SPACE)
#define ESCM &mt LCTRL ESC

&mt { tapping-term-ms = <125>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };

        tabesctap: tabesctap {
            compatible = "zmk,behavior-tap-dance";
            label = "TABESCTAP";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <170>;
        };

        spacelayer: spacelayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        shiftmonum: shiftmonum {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMONUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&tabesctap  &kp Q  &kp W  &kp E         &kp R                &kp T          &kp Y  &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F                &kp G          &kp H  &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V                &kp B          &kp N  &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_WIN  &spacelayer 3 SPACE  &lt 1 SPACE    &mo 2  &lt 3 SPACE  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&mt LEFT_CONTROL F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6         &trans     &kp UNDER      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&mt LSHFT F7         &kp F8           &kp F9  &kp F10   &kp F11     &kp F12        &trans     &kp PIPE       &kp PIPE      &kp PIPE              &kp BACKSLASH          &kp ESCAPE
                                              &trans    &trans      &trans         &mo 5      &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                   &kp NUMBER_6   &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&kp LCTRL    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR            &kp PERCENT              &kp MINUS      &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&shiftmonum  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH  &kp UNDER  &kp PLUS   &kp SLASH         &kp BACKSLASH      &kp TILDE
                                         &trans        &trans                &mo 5                    &trans         &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &kp N6  &kp N7    &kp N8         &kp N9     &kp N0     &kp DEL
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp SPACE  &trans       &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans    &trans  &trans     &trans       &trans  &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
                             &trans  &kp SPACE  &kp SPACE    &trans  &mo 3     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp CLCK      &bt BT_PRV    &bt BT_NXT    &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
